// source: model/multiSignature.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var model_pagination_pb = require('../model/pagination_pb.js');
goog.object.extend(proto, model_pagination_pb);
goog.exportSymbol('proto.model.GetMultisigAddressByParticipantAddressRequest', null, global);
goog.exportSymbol('proto.model.GetMultisigAddressByParticipantAddressResponse', null, global);
goog.exportSymbol('proto.model.GetMultisigAddressesByBlockHeightRangeRequest', null, global);
goog.exportSymbol('proto.model.GetMultisigAddressesByBlockHeightRangeResponse', null, global);
goog.exportSymbol('proto.model.GetMultisignatureInfoRequest', null, global);
goog.exportSymbol('proto.model.GetMultisignatureInfoResponse', null, global);
goog.exportSymbol('proto.model.GetParticipantsByMultisigAddressesRequest', null, global);
goog.exportSymbol('proto.model.GetParticipantsByMultisigAddressesResponse', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionDetailByTransactionHashRequest', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionDetailByTransactionHashResponse', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionsByHeightRequest', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionsByHeightResponse', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionsRequest', null, global);
goog.exportSymbol('proto.model.GetPendingTransactionsResponse', null, global);
goog.exportSymbol('proto.model.MultiSignatureInfo', null, global);
goog.exportSymbol('proto.model.MultiSignatureParticipant', null, global);
goog.exportSymbol('proto.model.MultiSignatureParticipants', null, global);
goog.exportSymbol('proto.model.PendingSignature', null, global);
goog.exportSymbol('proto.model.PendingTransaction', null, global);
goog.exportSymbol('proto.model.PendingTransactionStatus', null, global);
goog.exportSymbol('proto.model.SignatureInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.MultiSignatureInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.MultiSignatureInfo.repeatedFields_, null);
};
goog.inherits(proto.model.MultiSignatureInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.MultiSignatureInfo.displayName = 'proto.model.MultiSignatureInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.SignatureInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.SignatureInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.SignatureInfo.displayName = 'proto.model.SignatureInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.MultiSignatureParticipant = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.MultiSignatureParticipant, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.MultiSignatureParticipant.displayName = 'proto.model.MultiSignatureParticipant';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PendingSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.PendingSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PendingSignature.displayName = 'proto.model.PendingSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PendingTransaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.PendingTransaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PendingTransaction.displayName = 'proto.model.PendingTransaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetPendingTransactionsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionsRequest.displayName = 'proto.model.GetPendingTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetPendingTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetPendingTransactionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionsResponse.displayName = 'proto.model.GetPendingTransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetPendingTransactionDetailByTransactionHashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionDetailByTransactionHashRequest.displayName = 'proto.model.GetPendingTransactionDetailByTransactionHashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetPendingTransactionDetailByTransactionHashResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetPendingTransactionDetailByTransactionHashResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionDetailByTransactionHashResponse.displayName = 'proto.model.GetPendingTransactionDetailByTransactionHashResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisignatureInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetMultisignatureInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisignatureInfoRequest.displayName = 'proto.model.GetMultisignatureInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisignatureInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetMultisignatureInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetMultisignatureInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisignatureInfoResponse.displayName = 'proto.model.GetMultisignatureInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisigAddressByParticipantAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetMultisigAddressByParticipantAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisigAddressByParticipantAddressRequest.displayName = 'proto.model.GetMultisigAddressByParticipantAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisigAddressByParticipantAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetMultisigAddressByParticipantAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetMultisigAddressByParticipantAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisigAddressByParticipantAddressResponse.displayName = 'proto.model.GetMultisigAddressByParticipantAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionsByHeightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetPendingTransactionsByHeightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionsByHeightRequest.displayName = 'proto.model.GetPendingTransactionsByHeightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetPendingTransactionsByHeightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetPendingTransactionsByHeightResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetPendingTransactionsByHeightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetPendingTransactionsByHeightResponse.displayName = 'proto.model.GetPendingTransactionsByHeightResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetMultisigAddressesByBlockHeightRangeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisigAddressesByBlockHeightRangeRequest.displayName = 'proto.model.GetMultisigAddressesByBlockHeightRangeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetMultisigAddressesByBlockHeightRangeResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetMultisigAddressesByBlockHeightRangeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetMultisigAddressesByBlockHeightRangeResponse.displayName = 'proto.model.GetMultisigAddressesByBlockHeightRangeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetParticipantsByMultisigAddressesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.GetParticipantsByMultisigAddressesRequest.repeatedFields_, null);
};
goog.inherits(proto.model.GetParticipantsByMultisigAddressesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetParticipantsByMultisigAddressesRequest.displayName = 'proto.model.GetParticipantsByMultisigAddressesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.MultiSignatureParticipants = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.MultiSignatureParticipants.repeatedFields_, null);
};
goog.inherits(proto.model.MultiSignatureParticipants, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.MultiSignatureParticipants.displayName = 'proto.model.MultiSignatureParticipants';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetParticipantsByMultisigAddressesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetParticipantsByMultisigAddressesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetParticipantsByMultisigAddressesResponse.displayName = 'proto.model.GetParticipantsByMultisigAddressesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.MultiSignatureInfo.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.MultiSignatureInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.model.MultiSignatureInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.MultiSignatureInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    minimumsignatures: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nonce: jspb.Message.getFieldWithDefault(msg, 2, "0"),
    multisigaddress: msg.getMultisigaddress_asB64(),
    blockheight: jspb.Message.getFieldWithDefault(msg, 4, 0),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    addressesList: msg.getAddressesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.MultiSignatureInfo}
 */
proto.model.MultiSignatureInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.MultiSignatureInfo;
  return proto.model.MultiSignatureInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.MultiSignatureInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.MultiSignatureInfo}
 */
proto.model.MultiSignatureInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMinimumsignatures(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setNonce(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMultisigaddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addAddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.MultiSignatureInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.MultiSignatureInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMinimumsignatures();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getNonce();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getMultisigaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getAddressesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      6,
      f
    );
  }
};


/**
 * optional uint32 MinimumSignatures = 1;
 * @return {number}
 */
proto.model.MultiSignatureInfo.prototype.getMinimumsignatures = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.MultiSignatureInfo.prototype.setMinimumsignatures = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 Nonce = 2;
 * @return {string}
 */
proto.model.MultiSignatureInfo.prototype.getNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, "0"));
};


/** @param {string} value */
proto.model.MultiSignatureInfo.prototype.setNonce = function(value) {
  jspb.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional bytes MultisigAddress = 3;
 * @return {!(string|Uint8Array)}
 */
proto.model.MultiSignatureInfo.prototype.getMultisigaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes MultisigAddress = 3;
 * This is a type-conversion wrapper around `getMultisigaddress()`
 * @return {string}
 */
proto.model.MultiSignatureInfo.prototype.getMultisigaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMultisigaddress()));
};


/**
 * optional bytes MultisigAddress = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMultisigaddress()`
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureInfo.prototype.getMultisigaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMultisigaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.MultiSignatureInfo.prototype.setMultisigaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 BlockHeight = 4;
 * @return {number}
 */
proto.model.MultiSignatureInfo.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.MultiSignatureInfo.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool Latest = 5;
 * @return {boolean}
 */
proto.model.MultiSignatureInfo.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.model.MultiSignatureInfo.prototype.setLatest = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated bytes Addresses = 6;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.model.MultiSignatureInfo.prototype.getAddressesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * repeated bytes Addresses = 6;
 * This is a type-conversion wrapper around `getAddressesList()`
 * @return {!Array<string>}
 */
proto.model.MultiSignatureInfo.prototype.getAddressesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getAddressesList()));
};


/**
 * repeated bytes Addresses = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAddressesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.model.MultiSignatureInfo.prototype.getAddressesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getAddressesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.model.MultiSignatureInfo.prototype.setAddressesList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.model.MultiSignatureInfo.prototype.addAddresses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.MultiSignatureInfo.prototype.clearAddressesList = function() {
  this.setAddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.SignatureInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.model.SignatureInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.SignatureInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SignatureInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionhash: msg.getTransactionhash_asB64(),
    signaturesMap: (f = msg.getSignaturesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.SignatureInfo}
 */
proto.model.SignatureInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.SignatureInfo;
  return proto.model.SignatureInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.SignatureInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.SignatureInfo}
 */
proto.model.SignatureInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionhash(value);
      break;
    case 2:
      var value = msg.getSignaturesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.SignatureInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.SignatureInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.SignatureInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SignatureInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getSignaturesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
};


/**
 * optional bytes TransactionHash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.SignatureInfo.prototype.getTransactionhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes TransactionHash = 1;
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {string}
 */
proto.model.SignatureInfo.prototype.getTransactionhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionhash()));
};


/**
 * optional bytes TransactionHash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {!Uint8Array}
 */
proto.model.SignatureInfo.prototype.getTransactionhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.SignatureInfo.prototype.setTransactionhash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * map<string, bytes> Signatures = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.model.SignatureInfo.prototype.getSignaturesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.model.SignatureInfo.prototype.clearSignaturesMap = function() {
  this.getSignaturesMap().clear();
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.MultiSignatureParticipant.prototype.toObject = function(opt_includeInstance) {
  return proto.model.MultiSignatureParticipant.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.MultiSignatureParticipant} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureParticipant.toObject = function(includeInstance, msg) {
  var f, obj = {
    multisignatureaddress: msg.getMultisignatureaddress_asB64(),
    accountaddress: msg.getAccountaddress_asB64(),
    accountaddressindex: jspb.Message.getFieldWithDefault(msg, 3, 0),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    blockheight: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.MultiSignatureParticipant}
 */
proto.model.MultiSignatureParticipant.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.MultiSignatureParticipant;
  return proto.model.MultiSignatureParticipant.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.MultiSignatureParticipant} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.MultiSignatureParticipant}
 */
proto.model.MultiSignatureParticipant.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMultisignatureaddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountaddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountaddressindex(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureParticipant.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.MultiSignatureParticipant.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.MultiSignatureParticipant} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureParticipant.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMultisignatureaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAccountaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getAccountaddressindex();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes MultiSignatureAddress = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.MultiSignatureParticipant.prototype.getMultisignatureaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes MultiSignatureAddress = 1;
 * This is a type-conversion wrapper around `getMultisignatureaddress()`
 * @return {string}
 */
proto.model.MultiSignatureParticipant.prototype.getMultisignatureaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMultisignatureaddress()));
};


/**
 * optional bytes MultiSignatureAddress = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMultisignatureaddress()`
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureParticipant.prototype.getMultisignatureaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMultisignatureaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.MultiSignatureParticipant.prototype.setMultisignatureaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes AccountAddress = 2;
 * @return {!(string|Uint8Array)}
 */
proto.model.MultiSignatureParticipant.prototype.getAccountaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes AccountAddress = 2;
 * This is a type-conversion wrapper around `getAccountaddress()`
 * @return {string}
 */
proto.model.MultiSignatureParticipant.prototype.getAccountaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountaddress()));
};


/**
 * optional bytes AccountAddress = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountaddress()`
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureParticipant.prototype.getAccountaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.MultiSignatureParticipant.prototype.setAccountaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 AccountAddressIndex = 3;
 * @return {number}
 */
proto.model.MultiSignatureParticipant.prototype.getAccountaddressindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.MultiSignatureParticipant.prototype.setAccountaddressindex = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool Latest = 4;
 * @return {boolean}
 */
proto.model.MultiSignatureParticipant.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.model.MultiSignatureParticipant.prototype.setLatest = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 BlockHeight = 5;
 * @return {number}
 */
proto.model.MultiSignatureParticipant.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.model.MultiSignatureParticipant.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PendingSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PendingSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PendingSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PendingSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionhash: msg.getTransactionhash_asB64(),
    accountaddress: msg.getAccountaddress_asB64(),
    signature: msg.getSignature_asB64(),
    blockheight: jspb.Message.getFieldWithDefault(msg, 4, 0),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PendingSignature}
 */
proto.model.PendingSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.PendingSignature;
  return proto.model.PendingSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PendingSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PendingSignature}
 */
proto.model.PendingSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionhash(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAccountaddress(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PendingSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.PendingSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PendingSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PendingSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAccountaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional bytes TransactionHash = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingSignature.prototype.getTransactionhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes TransactionHash = 1;
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {string}
 */
proto.model.PendingSignature.prototype.getTransactionhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionhash()));
};


/**
 * optional bytes TransactionHash = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {!Uint8Array}
 */
proto.model.PendingSignature.prototype.getTransactionhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingSignature.prototype.setTransactionhash = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes AccountAddress = 2;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingSignature.prototype.getAccountaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes AccountAddress = 2;
 * This is a type-conversion wrapper around `getAccountaddress()`
 * @return {string}
 */
proto.model.PendingSignature.prototype.getAccountaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAccountaddress()));
};


/**
 * optional bytes AccountAddress = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAccountaddress()`
 * @return {!Uint8Array}
 */
proto.model.PendingSignature.prototype.getAccountaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAccountaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingSignature.prototype.setAccountaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes Signature = 3;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingSignature.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes Signature = 3;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.model.PendingSignature.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes Signature = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.model.PendingSignature.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSignature()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingSignature.prototype.setSignature = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 BlockHeight = 4;
 * @return {number}
 */
proto.model.PendingSignature.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.PendingSignature.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool Latest = 5;
 * @return {boolean}
 */
proto.model.PendingSignature.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.model.PendingSignature.prototype.setLatest = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PendingTransaction.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PendingTransaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PendingTransaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PendingTransaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderaddress: msg.getSenderaddress_asB64(),
    transactionhash: msg.getTransactionhash_asB64(),
    transactionbytes: msg.getTransactionbytes_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    blockheight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    latest: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PendingTransaction}
 */
proto.model.PendingTransaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.PendingTransaction;
  return proto.model.PendingTransaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PendingTransaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PendingTransaction}
 */
proto.model.PendingTransaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSenderaddress(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionhash(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionbytes(value);
      break;
    case 4:
      var value = /** @type {!proto.model.PendingTransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setLatest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PendingTransaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.PendingTransaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PendingTransaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PendingTransaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getTransactionhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTransactionbytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getLatest();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bytes SenderAddress = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingTransaction.prototype.getSenderaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes SenderAddress = 1;
 * This is a type-conversion wrapper around `getSenderaddress()`
 * @return {string}
 */
proto.model.PendingTransaction.prototype.getSenderaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSenderaddress()));
};


/**
 * optional bytes SenderAddress = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSenderaddress()`
 * @return {!Uint8Array}
 */
proto.model.PendingTransaction.prototype.getSenderaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSenderaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingTransaction.prototype.setSenderaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes TransactionHash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingTransaction.prototype.getTransactionhash = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes TransactionHash = 2;
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {string}
 */
proto.model.PendingTransaction.prototype.getTransactionhash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionhash()));
};


/**
 * optional bytes TransactionHash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {!Uint8Array}
 */
proto.model.PendingTransaction.prototype.getTransactionhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingTransaction.prototype.setTransactionhash = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes TransactionBytes = 3;
 * @return {!(string|Uint8Array)}
 */
proto.model.PendingTransaction.prototype.getTransactionbytes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes TransactionBytes = 3;
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {string}
 */
proto.model.PendingTransaction.prototype.getTransactionbytes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTransactionbytes()));
};


/**
 * optional bytes TransactionBytes = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {!Uint8Array}
 */
proto.model.PendingTransaction.prototype.getTransactionbytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTransactionbytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PendingTransaction.prototype.setTransactionbytes = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional PendingTransactionStatus Status = 4;
 * @return {!proto.model.PendingTransactionStatus}
 */
proto.model.PendingTransaction.prototype.getStatus = function() {
  return /** @type {!proto.model.PendingTransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.model.PendingTransactionStatus} value */
proto.model.PendingTransaction.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional uint32 BlockHeight = 5;
 * @return {number}
 */
proto.model.PendingTransaction.prototype.getBlockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.model.PendingTransaction.prototype.setBlockheight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool Latest = 6;
 * @return {boolean}
 */
proto.model.PendingTransaction.prototype.getLatest = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.model.PendingTransaction.prototype.setLatest = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    senderaddress: msg.getSenderaddress_asB64(),
    status: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagination: (f = msg.getPagination()) && model_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionsRequest}
 */
proto.model.GetPendingTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionsRequest;
  return proto.model.GetPendingTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionsRequest}
 */
proto.model.GetPendingTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSenderaddress(value);
      break;
    case 2:
      var value = /** @type {!proto.model.PendingTransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 3:
      var value = new model_pagination_pb.Pagination;
      reader.readMessage(value,model_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSenderaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      model_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes SenderAddress = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.GetPendingTransactionsRequest.prototype.getSenderaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes SenderAddress = 1;
 * This is a type-conversion wrapper around `getSenderaddress()`
 * @return {string}
 */
proto.model.GetPendingTransactionsRequest.prototype.getSenderaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSenderaddress()));
};


/**
 * optional bytes SenderAddress = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSenderaddress()`
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionsRequest.prototype.getSenderaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSenderaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.GetPendingTransactionsRequest.prototype.setSenderaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional PendingTransactionStatus Status = 2;
 * @return {!proto.model.PendingTransactionStatus}
 */
proto.model.GetPendingTransactionsRequest.prototype.getStatus = function() {
  return /** @type {!proto.model.PendingTransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.model.PendingTransactionStatus} value */
proto.model.GetPendingTransactionsRequest.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Pagination Pagination = 3;
 * @return {?proto.model.Pagination}
 */
proto.model.GetPendingTransactionsRequest.prototype.getPagination = function() {
  return /** @type{?proto.model.Pagination} */ (
    jspb.Message.getWrapperField(this, model_pagination_pb.Pagination, 3));
};


/** @param {?proto.model.Pagination|undefined} value */
proto.model.GetPendingTransactionsRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetPendingTransactionsRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetPendingTransactionsRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetPendingTransactionsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pendingtransactionsList: jspb.Message.toObjectList(msg.getPendingtransactionsList(),
    proto.model.PendingTransaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionsResponse}
 */
proto.model.GetPendingTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionsResponse;
  return proto.model.GetPendingTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionsResponse}
 */
proto.model.GetPendingTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 3:
      var value = new proto.model.PendingTransaction;
      reader.readMessage(value,proto.model.PendingTransaction.deserializeBinaryFromReader);
      msg.addPendingtransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPendingtransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.model.PendingTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.model.GetPendingTransactionsResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetPendingTransactionsResponse.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Page = 2;
 * @return {number}
 */
proto.model.GetPendingTransactionsResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetPendingTransactionsResponse.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated PendingTransaction PendingTransactions = 3;
 * @return {!Array<!proto.model.PendingTransaction>}
 */
proto.model.GetPendingTransactionsResponse.prototype.getPendingtransactionsList = function() {
  return /** @type{!Array<!proto.model.PendingTransaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.PendingTransaction, 3));
};


/** @param {!Array<!proto.model.PendingTransaction>} value */
proto.model.GetPendingTransactionsResponse.prototype.setPendingtransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.model.PendingTransaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.PendingTransaction}
 */
proto.model.GetPendingTransactionsResponse.prototype.addPendingtransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.model.PendingTransaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetPendingTransactionsResponse.prototype.clearPendingtransactionsList = function() {
  this.setPendingtransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionDetailByTransactionHashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionhashhex: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionDetailByTransactionHashRequest}
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionDetailByTransactionHashRequest;
  return proto.model.GetPendingTransactionDetailByTransactionHashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionDetailByTransactionHashRequest}
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTransactionhashhex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionDetailByTransactionHashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionhashhex();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string TransactionHashHex = 1;
 * @return {string}
 */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.prototype.getTransactionhashhex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.model.GetPendingTransactionDetailByTransactionHashRequest.prototype.setTransactionhashhex = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionDetailByTransactionHashResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pendingtransaction: (f = msg.getPendingtransaction()) && proto.model.PendingTransaction.toObject(includeInstance, f),
    pendingsignaturesList: jspb.Message.toObjectList(msg.getPendingsignaturesList(),
    proto.model.PendingSignature.toObject, includeInstance),
    multisignatureinfo: (f = msg.getMultisignatureinfo()) && proto.model.MultiSignatureInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionDetailByTransactionHashResponse}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionDetailByTransactionHashResponse;
  return proto.model.GetPendingTransactionDetailByTransactionHashResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionDetailByTransactionHashResponse}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.PendingTransaction;
      reader.readMessage(value,proto.model.PendingTransaction.deserializeBinaryFromReader);
      msg.setPendingtransaction(value);
      break;
    case 2:
      var value = new proto.model.PendingSignature;
      reader.readMessage(value,proto.model.PendingSignature.deserializeBinaryFromReader);
      msg.addPendingsignatures(value);
      break;
    case 3:
      var value = new proto.model.MultiSignatureInfo;
      reader.readMessage(value,proto.model.MultiSignatureInfo.deserializeBinaryFromReader);
      msg.setMultisignatureinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionDetailByTransactionHashResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionDetailByTransactionHashResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPendingtransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.PendingTransaction.serializeBinaryToWriter
    );
  }
  f = message.getPendingsignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.model.PendingSignature.serializeBinaryToWriter
    );
  }
  f = message.getMultisignatureinfo();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.model.MultiSignatureInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional PendingTransaction PendingTransaction = 1;
 * @return {?proto.model.PendingTransaction}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.getPendingtransaction = function() {
  return /** @type{?proto.model.PendingTransaction} */ (
    jspb.Message.getWrapperField(this, proto.model.PendingTransaction, 1));
};


/** @param {?proto.model.PendingTransaction|undefined} value */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.setPendingtransaction = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.clearPendingtransaction = function() {
  this.setPendingtransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.hasPendingtransaction = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated PendingSignature PendingSignatures = 2;
 * @return {!Array<!proto.model.PendingSignature>}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.getPendingsignaturesList = function() {
  return /** @type{!Array<!proto.model.PendingSignature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.PendingSignature, 2));
};


/** @param {!Array<!proto.model.PendingSignature>} value */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.setPendingsignaturesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.model.PendingSignature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.PendingSignature}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.addPendingsignatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.model.PendingSignature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.clearPendingsignaturesList = function() {
  this.setPendingsignaturesList([]);
};


/**
 * optional MultiSignatureInfo MultiSignatureInfo = 3;
 * @return {?proto.model.MultiSignatureInfo}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.getMultisignatureinfo = function() {
  return /** @type{?proto.model.MultiSignatureInfo} */ (
    jspb.Message.getWrapperField(this, proto.model.MultiSignatureInfo, 3));
};


/** @param {?proto.model.MultiSignatureInfo|undefined} value */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.setMultisignatureinfo = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.clearMultisignatureinfo = function() {
  this.setMultisignatureinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetPendingTransactionDetailByTransactionHashResponse.prototype.hasMultisignatureinfo = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisignatureInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisignatureInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisignatureInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisignatureInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    multisigaddress: msg.getMultisigaddress_asB64(),
    pagination: (f = msg.getPagination()) && model_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisignatureInfoRequest}
 */
proto.model.GetMultisignatureInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisignatureInfoRequest;
  return proto.model.GetMultisignatureInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisignatureInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisignatureInfoRequest}
 */
proto.model.GetMultisignatureInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMultisigaddress(value);
      break;
    case 2:
      var value = new model_pagination_pb.Pagination;
      reader.readMessage(value,model_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisignatureInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisignatureInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisignatureInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisignatureInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMultisigaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      model_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes MultisigAddress = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.GetMultisignatureInfoRequest.prototype.getMultisigaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes MultisigAddress = 1;
 * This is a type-conversion wrapper around `getMultisigaddress()`
 * @return {string}
 */
proto.model.GetMultisignatureInfoRequest.prototype.getMultisigaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMultisigaddress()));
};


/**
 * optional bytes MultisigAddress = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMultisigaddress()`
 * @return {!Uint8Array}
 */
proto.model.GetMultisignatureInfoRequest.prototype.getMultisigaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMultisigaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.GetMultisignatureInfoRequest.prototype.setMultisigaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Pagination Pagination = 2;
 * @return {?proto.model.Pagination}
 */
proto.model.GetMultisignatureInfoRequest.prototype.getPagination = function() {
  return /** @type{?proto.model.Pagination} */ (
    jspb.Message.getWrapperField(this, model_pagination_pb.Pagination, 2));
};


/** @param {?proto.model.Pagination|undefined} value */
proto.model.GetMultisignatureInfoRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetMultisignatureInfoRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetMultisignatureInfoRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetMultisignatureInfoResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisignatureInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisignatureInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisignatureInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisignatureInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    multisignatureinfoList: jspb.Message.toObjectList(msg.getMultisignatureinfoList(),
    proto.model.MultiSignatureInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisignatureInfoResponse}
 */
proto.model.GetMultisignatureInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisignatureInfoResponse;
  return proto.model.GetMultisignatureInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisignatureInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisignatureInfoResponse}
 */
proto.model.GetMultisignatureInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 3:
      var value = new proto.model.MultiSignatureInfo;
      reader.readMessage(value,proto.model.MultiSignatureInfo.deserializeBinaryFromReader);
      msg.addMultisignatureinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisignatureInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisignatureInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisignatureInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisignatureInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMultisignatureinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.model.MultiSignatureInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.model.GetMultisignatureInfoResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetMultisignatureInfoResponse.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Page = 2;
 * @return {number}
 */
proto.model.GetMultisignatureInfoResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetMultisignatureInfoResponse.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated MultiSignatureInfo MultisignatureInfo = 3;
 * @return {!Array<!proto.model.MultiSignatureInfo>}
 */
proto.model.GetMultisignatureInfoResponse.prototype.getMultisignatureinfoList = function() {
  return /** @type{!Array<!proto.model.MultiSignatureInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.MultiSignatureInfo, 3));
};


/** @param {!Array<!proto.model.MultiSignatureInfo>} value */
proto.model.GetMultisignatureInfoResponse.prototype.setMultisignatureinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.model.MultiSignatureInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.MultiSignatureInfo}
 */
proto.model.GetMultisignatureInfoResponse.prototype.addMultisignatureinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.model.MultiSignatureInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetMultisignatureInfoResponse.prototype.clearMultisignatureinfoList = function() {
  this.setMultisignatureinfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisigAddressByParticipantAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisigAddressByParticipantAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    participantaddress: msg.getParticipantaddress_asB64(),
    pagination: (f = msg.getPagination()) && model_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisigAddressByParticipantAddressRequest}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisigAddressByParticipantAddressRequest;
  return proto.model.GetMultisigAddressByParticipantAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisigAddressByParticipantAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisigAddressByParticipantAddressRequest}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setParticipantaddress(value);
      break;
    case 2:
      var value = new model_pagination_pb.Pagination;
      reader.readMessage(value,model_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisigAddressByParticipantAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisigAddressByParticipantAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParticipantaddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      model_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes ParticipantAddress = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.getParticipantaddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes ParticipantAddress = 1;
 * This is a type-conversion wrapper around `getParticipantaddress()`
 * @return {string}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.getParticipantaddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getParticipantaddress()));
};


/**
 * optional bytes ParticipantAddress = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getParticipantaddress()`
 * @return {!Uint8Array}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.getParticipantaddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getParticipantaddress()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.setParticipantaddress = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Pagination Pagination = 2;
 * @return {?proto.model.Pagination}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.getPagination = function() {
  return /** @type{?proto.model.Pagination} */ (
    jspb.Message.getWrapperField(this, model_pagination_pb.Pagination, 2));
};


/** @param {?proto.model.Pagination|undefined} value */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetMultisigAddressByParticipantAddressRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisigAddressByParticipantAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisigAddressByParticipantAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    multisigaddressesList: msg.getMultisigaddressesList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisigAddressByParticipantAddressResponse}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisigAddressByParticipantAddressResponse;
  return proto.model.GetMultisigAddressByParticipantAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisigAddressByParticipantAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisigAddressByParticipantAddressResponse}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addMultisigaddresses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisigAddressByParticipantAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisigAddressByParticipantAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMultisigaddressesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional uint32 Total = 1;
 * @return {number}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated bytes MultisigAddresses = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.getMultisigaddressesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes MultisigAddresses = 2;
 * This is a type-conversion wrapper around `getMultisigaddressesList()`
 * @return {!Array<string>}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.getMultisigaddressesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getMultisigaddressesList()));
};


/**
 * repeated bytes MultisigAddresses = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMultisigaddressesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.getMultisigaddressesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getMultisigaddressesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.setMultisigaddressesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.addMultisigaddresses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetMultisigAddressByParticipantAddressResponse.prototype.clearMultisigaddressesList = function() {
  this.setMultisigaddressesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionsByHeightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionsByHeightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionsByHeightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsByHeightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toheight: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionsByHeightRequest}
 */
proto.model.GetPendingTransactionsByHeightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionsByHeightRequest;
  return proto.model.GetPendingTransactionsByHeightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionsByHeightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionsByHeightRequest}
 */
proto.model.GetPendingTransactionsByHeightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFromheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToheight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionsByHeightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionsByHeightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionsByHeightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsByHeightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getToheight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 FromHeight = 1;
 * @return {number}
 */
proto.model.GetPendingTransactionsByHeightRequest.prototype.getFromheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetPendingTransactionsByHeightRequest.prototype.setFromheight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 ToHeight = 2;
 * @return {number}
 */
proto.model.GetPendingTransactionsByHeightRequest.prototype.getToheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetPendingTransactionsByHeightRequest.prototype.setToheight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetPendingTransactionsByHeightResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetPendingTransactionsByHeightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetPendingTransactionsByHeightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetPendingTransactionsByHeightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsByHeightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    pendingtransactionsList: jspb.Message.toObjectList(msg.getPendingtransactionsList(),
    proto.model.PendingTransaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetPendingTransactionsByHeightResponse}
 */
proto.model.GetPendingTransactionsByHeightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetPendingTransactionsByHeightResponse;
  return proto.model.GetPendingTransactionsByHeightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetPendingTransactionsByHeightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetPendingTransactionsByHeightResponse}
 */
proto.model.GetPendingTransactionsByHeightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.PendingTransaction;
      reader.readMessage(value,proto.model.PendingTransaction.deserializeBinaryFromReader);
      msg.addPendingtransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetPendingTransactionsByHeightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetPendingTransactionsByHeightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetPendingTransactionsByHeightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetPendingTransactionsByHeightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPendingtransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.model.PendingTransaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PendingTransaction PendingTransactions = 1;
 * @return {!Array<!proto.model.PendingTransaction>}
 */
proto.model.GetPendingTransactionsByHeightResponse.prototype.getPendingtransactionsList = function() {
  return /** @type{!Array<!proto.model.PendingTransaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.PendingTransaction, 1));
};


/** @param {!Array<!proto.model.PendingTransaction>} value */
proto.model.GetPendingTransactionsByHeightResponse.prototype.setPendingtransactionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.model.PendingTransaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.PendingTransaction}
 */
proto.model.GetPendingTransactionsByHeightResponse.prototype.addPendingtransactions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.model.PendingTransaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetPendingTransactionsByHeightResponse.prototype.clearPendingtransactionsList = function() {
  this.setPendingtransactionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisigAddressesByBlockHeightRangeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromblockheight: jspb.Message.getFieldWithDefault(msg, 1, 0),
    toblockheight: jspb.Message.getFieldWithDefault(msg, 2, 0),
    pagination: (f = msg.getPagination()) && model_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisigAddressesByBlockHeightRangeRequest}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisigAddressesByBlockHeightRangeRequest;
  return proto.model.GetMultisigAddressesByBlockHeightRangeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisigAddressesByBlockHeightRangeRequest}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFromblockheight(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToblockheight(value);
      break;
    case 3:
      var value = new model_pagination_pb.Pagination;
      reader.readMessage(value,model_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisigAddressesByBlockHeightRangeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromblockheight();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getToblockheight();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      model_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 FromBlockHeight = 1;
 * @return {number}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.getFromblockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.setFromblockheight = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 ToBlockHeight = 2;
 * @return {number}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.getToblockheight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.setToblockheight = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Pagination Pagination = 3;
 * @return {?proto.model.Pagination}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.getPagination = function() {
  return /** @type{?proto.model.Pagination} */ (
    jspb.Message.getWrapperField(this, model_pagination_pb.Pagination, 3));
};


/** @param {?proto.model.Pagination|undefined} value */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetMultisigAddressesByBlockHeightRangeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    page: jspb.Message.getFieldWithDefault(msg, 2, 0),
    multisignatureinfoList: jspb.Message.toObjectList(msg.getMultisignatureinfoList(),
    proto.model.MultiSignatureInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetMultisigAddressesByBlockHeightRangeResponse}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetMultisigAddressesByBlockHeightRangeResponse;
  return proto.model.GetMultisigAddressesByBlockHeightRangeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetMultisigAddressesByBlockHeightRangeResponse}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPage(value);
      break;
    case 3:
      var value = new proto.model.MultiSignatureInfo;
      reader.readMessage(value,proto.model.MultiSignatureInfo.deserializeBinaryFromReader);
      msg.addMultisignatureinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetMultisigAddressesByBlockHeightRangeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetMultisigAddressesByBlockHeightRangeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPage();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMultisignatureinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.model.MultiSignatureInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 Count = 1;
 * @return {number}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Page = 2;
 * @return {number}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.getPage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.setPage = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated MultiSignatureInfo MultisignatureInfo = 3;
 * @return {!Array<!proto.model.MultiSignatureInfo>}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.getMultisignatureinfoList = function() {
  return /** @type{!Array<!proto.model.MultiSignatureInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.MultiSignatureInfo, 3));
};


/** @param {!Array<!proto.model.MultiSignatureInfo>} value */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.setMultisignatureinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.model.MultiSignatureInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.MultiSignatureInfo}
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.addMultisignatureinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.model.MultiSignatureInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetMultisigAddressesByBlockHeightRangeResponse.prototype.clearMultisignatureinfoList = function() {
  this.setMultisignatureinfoList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetParticipantsByMultisigAddressesRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetParticipantsByMultisigAddressesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetParticipantsByMultisigAddressesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetParticipantsByMultisigAddressesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    multisigaddressesList: msg.getMultisigaddressesList_asB64(),
    pagination: (f = msg.getPagination()) && model_pagination_pb.Pagination.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetParticipantsByMultisigAddressesRequest}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetParticipantsByMultisigAddressesRequest;
  return proto.model.GetParticipantsByMultisigAddressesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetParticipantsByMultisigAddressesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetParticipantsByMultisigAddressesRequest}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addMultisigaddresses(value);
      break;
    case 2:
      var value = new model_pagination_pb.Pagination;
      reader.readMessage(value,model_pagination_pb.Pagination.deserializeBinaryFromReader);
      msg.setPagination(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetParticipantsByMultisigAddressesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetParticipantsByMultisigAddressesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetParticipantsByMultisigAddressesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMultisigaddressesList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
  f = message.getPagination();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      model_pagination_pb.Pagination.serializeBinaryToWriter
    );
  }
};


/**
 * repeated bytes MultisigAddresses = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.getMultisigaddressesList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes MultisigAddresses = 1;
 * This is a type-conversion wrapper around `getMultisigaddressesList()`
 * @return {!Array<string>}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.getMultisigaddressesList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getMultisigaddressesList()));
};


/**
 * repeated bytes MultisigAddresses = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMultisigaddressesList()`
 * @return {!Array<!Uint8Array>}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.getMultisigaddressesList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getMultisigaddressesList()));
};


/** @param {!(Array<!Uint8Array>|Array<string>)} value */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.setMultisigaddressesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.addMultisigaddresses = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.clearMultisigaddressesList = function() {
  this.setMultisigaddressesList([]);
};


/**
 * optional Pagination Pagination = 2;
 * @return {?proto.model.Pagination}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.getPagination = function() {
  return /** @type{?proto.model.Pagination} */ (
    jspb.Message.getWrapperField(this, model_pagination_pb.Pagination, 2));
};


/** @param {?proto.model.Pagination|undefined} value */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.setPagination = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.clearPagination = function() {
  this.setPagination(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.GetParticipantsByMultisigAddressesRequest.prototype.hasPagination = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.MultiSignatureParticipants.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.MultiSignatureParticipants.prototype.toObject = function(opt_includeInstance) {
  return proto.model.MultiSignatureParticipants.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.MultiSignatureParticipants} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureParticipants.toObject = function(includeInstance, msg) {
  var f, obj = {
    multisignatureparticipantsList: jspb.Message.toObjectList(msg.getMultisignatureparticipantsList(),
    proto.model.MultiSignatureParticipant.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.MultiSignatureParticipants}
 */
proto.model.MultiSignatureParticipants.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.MultiSignatureParticipants;
  return proto.model.MultiSignatureParticipants.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.MultiSignatureParticipants} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.MultiSignatureParticipants}
 */
proto.model.MultiSignatureParticipants.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.MultiSignatureParticipant;
      reader.readMessage(value,proto.model.MultiSignatureParticipant.deserializeBinaryFromReader);
      msg.addMultisignatureparticipants(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.MultiSignatureParticipants.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.MultiSignatureParticipants.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.MultiSignatureParticipants} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.MultiSignatureParticipants.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMultisignatureparticipantsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.model.MultiSignatureParticipant.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MultiSignatureParticipant MultiSignatureParticipants = 1;
 * @return {!Array<!proto.model.MultiSignatureParticipant>}
 */
proto.model.MultiSignatureParticipants.prototype.getMultisignatureparticipantsList = function() {
  return /** @type{!Array<!proto.model.MultiSignatureParticipant>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.MultiSignatureParticipant, 1));
};


/** @param {!Array<!proto.model.MultiSignatureParticipant>} value */
proto.model.MultiSignatureParticipants.prototype.setMultisignatureparticipantsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.model.MultiSignatureParticipant=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.MultiSignatureParticipant}
 */
proto.model.MultiSignatureParticipants.prototype.addMultisignatureparticipants = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.model.MultiSignatureParticipant, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.MultiSignatureParticipants.prototype.clearMultisignatureparticipantsList = function() {
  this.setMultisignatureparticipantsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetParticipantsByMultisigAddressesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetParticipantsByMultisigAddressesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetParticipantsByMultisigAddressesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    multisignatureparticipantsMap: (f = msg.getMultisignatureparticipantsMap()) ? f.toObject(includeInstance, proto.model.MultiSignatureParticipants.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetParticipantsByMultisigAddressesResponse}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.GetParticipantsByMultisigAddressesResponse;
  return proto.model.GetParticipantsByMultisigAddressesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetParticipantsByMultisigAddressesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetParticipantsByMultisigAddressesResponse}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotal(value);
      break;
    case 2:
      var value = msg.getMultisignatureparticipantsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.model.MultiSignatureParticipants.deserializeBinaryFromReader, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.GetParticipantsByMultisigAddressesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetParticipantsByMultisigAddressesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetParticipantsByMultisigAddressesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMultisignatureparticipantsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.model.MultiSignatureParticipants.serializeBinaryToWriter);
  }
};


/**
 * optional uint32 Total = 1;
 * @return {number}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.setTotal = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, MultiSignatureParticipants> MultiSignatureParticipants = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.model.MultiSignatureParticipants>}
 */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.getMultisignatureparticipantsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.model.MultiSignatureParticipants>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.model.MultiSignatureParticipants));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.model.GetParticipantsByMultisigAddressesResponse.prototype.clearMultisignatureparticipantsMap = function() {
  this.getMultisignatureparticipantsMap().clear();
};


/**
 * @enum {number}
 */
proto.model.PendingTransactionStatus = {
  PENDINGTRANSACTIONPENDING: 0,
  PENDINGTRANSACTIONEXECUTED: 1,
  PENDINGTRANSACTIONNOOP: 2,
  PENDINGTRANSACTIONEXPIRED: 3
};

goog.object.extend(exports, proto.model);
