import grpcWeb from '@improbable-eng/grpc-web';
import googleProtobuf from 'google-protobuf';

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var transaction_pb = createCommonjsModule(function (module, exports) {
// source: model/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();

goog.exportSymbol('proto.model.EmptyTransactionBody', null, global);
goog.exportSymbol('proto.model.GetTransactionRequest', null, global);
goog.exportSymbol('proto.model.GetTransactionsRequest', null, global);
goog.exportSymbol('proto.model.GetTransactionsResponse', null, global);
goog.exportSymbol('proto.model.NodeRegistrationTransactionBody', null, global);
goog.exportSymbol('proto.model.PostTransactionRequest', null, global);
goog.exportSymbol('proto.model.PostTransactionResponse', null, global);
goog.exportSymbol('proto.model.PostUnconfirmedTransactionRequest', null, global);
goog.exportSymbol('proto.model.ProofOfOwnership', null, global);
goog.exportSymbol('proto.model.SendMoneyTransactionBody', null, global);
goog.exportSymbol('proto.model.SendTransactionRequest', null, global);
goog.exportSymbol('proto.model.Transaction', null, global);
goog.exportSymbol('proto.model.Transaction.TransactionbodyCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Transaction = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, proto.model.Transaction.oneofGroups_);
};
goog.inherits(proto.model.Transaction, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Transaction.displayName = 'proto.model.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.EmptyTransactionBody = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.EmptyTransactionBody, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.EmptyTransactionBody.displayName = 'proto.model.EmptyTransactionBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.SendMoneyTransactionBody = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.SendMoneyTransactionBody, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.SendMoneyTransactionBody.displayName = 'proto.model.SendMoneyTransactionBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NodeRegistrationTransactionBody = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NodeRegistrationTransactionBody, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NodeRegistrationTransactionBody.displayName = 'proto.model.NodeRegistrationTransactionBody';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.ProofOfOwnership = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.ProofOfOwnership, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.ProofOfOwnership.displayName = 'proto.model.ProofOfOwnership';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetTransactionRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetTransactionRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetTransactionRequest.displayName = 'proto.model.GetTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetTransactionsRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetTransactionsRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetTransactionsRequest.displayName = 'proto.model.GetTransactionsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PostTransactionRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.PostTransactionRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PostTransactionRequest.displayName = 'proto.model.PostTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PostTransactionResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.PostTransactionResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PostTransactionResponse.displayName = 'proto.model.PostTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetTransactionsResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.model.GetTransactionsResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetTransactionsResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetTransactionsResponse.displayName = 'proto.model.GetTransactionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.SendTransactionRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.SendTransactionRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.SendTransactionRequest.displayName = 'proto.model.SendTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PostUnconfirmedTransactionRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.PostUnconfirmedTransactionRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PostUnconfirmedTransactionRequest.displayName = 'proto.model.PostUnconfirmedTransactionRequest';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.model.Transaction.oneofGroups_ = [[15,16,17]];

/**
 * @enum {number}
 */
proto.model.Transaction.TransactionbodyCase = {
  TRANSACTIONBODY_NOT_SET: 0,
  EMPTYTRANSACTIONBODY: 15,
  SENDMONEYTRANSACTIONBODY: 16,
  NODEREGISTRATIONTRANSACTIONBODY: 17
};

/**
 * @return {proto.model.Transaction.TransactionbodyCase}
 */
proto.model.Transaction.prototype.getTransactionbodyCase = function() {
  return /** @type {proto.model.Transaction.TransactionbodyCase} */(googleProtobuf.Message.computeOneofCase(this, proto.model.Transaction.oneofGroups_[0]));
};



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    version: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    id: googleProtobuf.Message.getFieldWithDefault(msg, 2, "0"),
    blockid: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    senderaccounttype: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    senderaccountaddress: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    recipientaccounttype: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    recipientaccountaddress: googleProtobuf.Message.getFieldWithDefault(msg, 8, ""),
    transactiontype: googleProtobuf.Message.getFieldWithDefault(msg, 9, 0),
    fee: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
    timestamp: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
    transactionhash: msg.getTransactionhash_asB64(),
    transactionbodylength: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
    transactionbodybytes: msg.getTransactionbodybytes_asB64(),
    emptytransactionbody: (f = msg.getEmptytransactionbody()) && proto.model.EmptyTransactionBody.toObject(includeInstance, f),
    sendmoneytransactionbody: (f = msg.getSendmoneytransactionbody()) && proto.model.SendMoneyTransactionBody.toObject(includeInstance, f),
    noderegistrationtransactionbody: (f = msg.getNoderegistrationtransactionbody()) && proto.model.NodeRegistrationTransactionBody.toObject(includeInstance, f),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Transaction}
 */
proto.model.Transaction.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.Transaction;
  return proto.model.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Transaction}
 */
proto.model.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setBlockid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSenderaccounttype(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSenderaccountaddress(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecipientaccounttype(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecipientaccountaddress(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTransactiontype(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionhash(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTransactionbodylength(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionbodybytes(value);
      break;
    case 15:
      var value = new proto.model.EmptyTransactionBody;
      reader.readMessage(value,proto.model.EmptyTransactionBody.deserializeBinaryFromReader);
      msg.setEmptytransactionbody(value);
      break;
    case 16:
      var value = new proto.model.SendMoneyTransactionBody;
      reader.readMessage(value,proto.model.SendMoneyTransactionBody.deserializeBinaryFromReader);
      msg.setSendmoneytransactionbody(value);
      break;
    case 17:
      var value = new proto.model.NodeRegistrationTransactionBody;
      reader.readMessage(value,proto.model.NodeRegistrationTransactionBody.deserializeBinaryFromReader);
      msg.setNoderegistrationtransactionbody(value);
      break;
    case 18:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Transaction.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getBlockid();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSenderaccounttype();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getSenderaccountaddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getRecipientaccounttype();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getRecipientaccountaddress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTransactiontype();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getTransactionhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getTransactionbodylength();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getTransactionbodybytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getEmptytransactionbody();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.model.EmptyTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getSendmoneytransactionbody();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.model.SendMoneyTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getNoderegistrationtransactionbody();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.model.NodeRegistrationTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      18,
      f
    );
  }
};


/**
 * optional uint32 Version = 1;
 * @return {number}
 */
proto.model.Transaction.prototype.getVersion = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setVersion = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 ID = 2;
 * @return {string}
 */
proto.model.Transaction.prototype.getId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, "0"));
};


/** @param {string} value */
proto.model.Transaction.prototype.setId = function(value) {
  googleProtobuf.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional int64 BlockID = 3;
 * @return {number}
 */
proto.model.Transaction.prototype.getBlockid = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setBlockid = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 Height = 4;
 * @return {number}
 */
proto.model.Transaction.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setHeight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 SenderAccountType = 5;
 * @return {number}
 */
proto.model.Transaction.prototype.getSenderaccounttype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setSenderaccounttype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string SenderAccountAddress = 6;
 * @return {string}
 */
proto.model.Transaction.prototype.getSenderaccountaddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.model.Transaction.prototype.setSenderaccountaddress = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint32 RecipientAccountType = 7;
 * @return {number}
 */
proto.model.Transaction.prototype.getRecipientaccounttype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setRecipientaccounttype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string RecipientAccountAddress = 8;
 * @return {string}
 */
proto.model.Transaction.prototype.getRecipientaccountaddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.model.Transaction.prototype.setRecipientaccountaddress = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 TransactionType = 9;
 * @return {number}
 */
proto.model.Transaction.prototype.getTransactiontype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setTransactiontype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int64 Fee = 10;
 * @return {number}
 */
proto.model.Transaction.prototype.getFee = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setFee = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 Timestamp = 11;
 * @return {number}
 */
proto.model.Transaction.prototype.getTimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setTimestamp = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes TransactionHash = 12;
 * @return {!(string|Uint8Array)}
 */
proto.model.Transaction.prototype.getTransactionhash = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes TransactionHash = 12;
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {string}
 */
proto.model.Transaction.prototype.getTransactionhash_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getTransactionhash()));
};


/**
 * optional bytes TransactionHash = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionhash()`
 * @return {!Uint8Array}
 */
proto.model.Transaction.prototype.getTransactionhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getTransactionhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Transaction.prototype.setTransactionhash = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional uint32 TransactionBodyLength = 13;
 * @return {number}
 */
proto.model.Transaction.prototype.getTransactionbodylength = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.model.Transaction.prototype.setTransactionbodylength = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bytes TransactionBodyBytes = 14;
 * @return {!(string|Uint8Array)}
 */
proto.model.Transaction.prototype.getTransactionbodybytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes TransactionBodyBytes = 14;
 * This is a type-conversion wrapper around `getTransactionbodybytes()`
 * @return {string}
 */
proto.model.Transaction.prototype.getTransactionbodybytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getTransactionbodybytes()));
};


/**
 * optional bytes TransactionBodyBytes = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionbodybytes()`
 * @return {!Uint8Array}
 */
proto.model.Transaction.prototype.getTransactionbodybytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getTransactionbodybytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Transaction.prototype.setTransactionbodybytes = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional EmptyTransactionBody emptyTransactionBody = 15;
 * @return {?proto.model.EmptyTransactionBody}
 */
proto.model.Transaction.prototype.getEmptytransactionbody = function() {
  return /** @type{?proto.model.EmptyTransactionBody} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.EmptyTransactionBody, 15));
};


/** @param {?proto.model.EmptyTransactionBody|undefined} value */
proto.model.Transaction.prototype.setEmptytransactionbody = function(value) {
  googleProtobuf.Message.setOneofWrapperField(this, 15, proto.model.Transaction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.Transaction.prototype.clearEmptytransactionbody = function() {
  this.setEmptytransactionbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Transaction.prototype.hasEmptytransactionbody = function() {
  return googleProtobuf.Message.getField(this, 15) != null;
};


/**
 * optional SendMoneyTransactionBody sendMoneyTransactionBody = 16;
 * @return {?proto.model.SendMoneyTransactionBody}
 */
proto.model.Transaction.prototype.getSendmoneytransactionbody = function() {
  return /** @type{?proto.model.SendMoneyTransactionBody} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.SendMoneyTransactionBody, 16));
};


/** @param {?proto.model.SendMoneyTransactionBody|undefined} value */
proto.model.Transaction.prototype.setSendmoneytransactionbody = function(value) {
  googleProtobuf.Message.setOneofWrapperField(this, 16, proto.model.Transaction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.Transaction.prototype.clearSendmoneytransactionbody = function() {
  this.setSendmoneytransactionbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Transaction.prototype.hasSendmoneytransactionbody = function() {
  return googleProtobuf.Message.getField(this, 16) != null;
};


/**
 * optional NodeRegistrationTransactionBody nodeRegistrationTransactionBody = 17;
 * @return {?proto.model.NodeRegistrationTransactionBody}
 */
proto.model.Transaction.prototype.getNoderegistrationtransactionbody = function() {
  return /** @type{?proto.model.NodeRegistrationTransactionBody} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.NodeRegistrationTransactionBody, 17));
};


/** @param {?proto.model.NodeRegistrationTransactionBody|undefined} value */
proto.model.Transaction.prototype.setNoderegistrationtransactionbody = function(value) {
  googleProtobuf.Message.setOneofWrapperField(this, 17, proto.model.Transaction.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.Transaction.prototype.clearNoderegistrationtransactionbody = function() {
  this.setNoderegistrationtransactionbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Transaction.prototype.hasNoderegistrationtransactionbody = function() {
  return googleProtobuf.Message.getField(this, 17) != null;
};


/**
 * optional bytes Signature = 18;
 * @return {!(string|Uint8Array)}
 */
proto.model.Transaction.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * optional bytes Signature = 18;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.model.Transaction.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes Signature = 18;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.model.Transaction.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignature()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Transaction.prototype.setSignature = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 18, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.EmptyTransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.model.EmptyTransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.EmptyTransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.EmptyTransactionBody.toObject = function(includeInstance, msg) {
  var obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.EmptyTransactionBody}
 */
proto.model.EmptyTransactionBody.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.EmptyTransactionBody;
  return proto.model.EmptyTransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.EmptyTransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.EmptyTransactionBody}
 */
proto.model.EmptyTransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.EmptyTransactionBody.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.EmptyTransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.EmptyTransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.EmptyTransactionBody.serializeBinaryToWriter = function(message, writer) {
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.SendMoneyTransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.model.SendMoneyTransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.SendMoneyTransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SendMoneyTransactionBody.toObject = function(includeInstance, msg) {
  var obj = {
    amount: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.SendMoneyTransactionBody}
 */
proto.model.SendMoneyTransactionBody.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.SendMoneyTransactionBody;
  return proto.model.SendMoneyTransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.SendMoneyTransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.SendMoneyTransactionBody}
 */
proto.model.SendMoneyTransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.SendMoneyTransactionBody.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.SendMoneyTransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.SendMoneyTransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SendMoneyTransactionBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 Amount = 1;
 * @return {number}
 */
proto.model.SendMoneyTransactionBody.prototype.getAmount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.SendMoneyTransactionBody.prototype.setAmount = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NodeRegistrationTransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NodeRegistrationTransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NodeRegistrationTransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NodeRegistrationTransactionBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodepublickey: msg.getNodepublickey_asB64(),
    accounttype: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    accountaddress: googleProtobuf.Message.getFieldWithDefault(msg, 3, ""),
    registrationheight: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    nodeaddresslength: googleProtobuf.Message.getFieldWithDefault(msg, 5, 0),
    nodeaddress: googleProtobuf.Message.getFieldWithDefault(msg, 6, ""),
    lockedbalance: googleProtobuf.Message.getFieldWithDefault(msg, 7, 0),
    poown: (f = msg.getPoown()) && proto.model.ProofOfOwnership.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NodeRegistrationTransactionBody}
 */
proto.model.NodeRegistrationTransactionBody.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.NodeRegistrationTransactionBody;
  return proto.model.NodeRegistrationTransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NodeRegistrationTransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NodeRegistrationTransactionBody}
 */
proto.model.NodeRegistrationTransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNodepublickey(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccounttype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountaddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRegistrationheight(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNodeaddresslength(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setNodeaddress(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLockedbalance(value);
      break;
    case 8:
      var value = new proto.model.ProofOfOwnership;
      reader.readMessage(value,proto.model.ProofOfOwnership.deserializeBinaryFromReader);
      msg.setPoown(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NodeRegistrationTransactionBody.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.NodeRegistrationTransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NodeRegistrationTransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NodeRegistrationTransactionBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNodepublickey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getAccounttype();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getAccountaddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegistrationheight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getNodeaddresslength();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getNodeaddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLockedbalance();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getPoown();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.model.ProofOfOwnership.serializeBinaryToWriter
    );
  }
};


/**
 * optional bytes NodePublicKey = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getNodepublickey = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes NodePublicKey = 1;
 * This is a type-conversion wrapper around `getNodepublickey()`
 * @return {string}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getNodepublickey_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getNodepublickey()));
};


/**
 * optional bytes NodePublicKey = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNodepublickey()`
 * @return {!Uint8Array}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getNodepublickey_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getNodepublickey()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.NodeRegistrationTransactionBody.prototype.setNodepublickey = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional uint32 AccountType = 2;
 * @return {number}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getAccounttype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.NodeRegistrationTransactionBody.prototype.setAccounttype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string AccountAddress = 3;
 * @return {string}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getAccountaddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.model.NodeRegistrationTransactionBody.prototype.setAccountaddress = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 RegistrationHeight = 4;
 * @return {number}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getRegistrationheight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.NodeRegistrationTransactionBody.prototype.setRegistrationheight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 NodeAddressLength = 5;
 * @return {number}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getNodeaddresslength = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.model.NodeRegistrationTransactionBody.prototype.setNodeaddresslength = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string NodeAddress = 6;
 * @return {string}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getNodeaddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.model.NodeRegistrationTransactionBody.prototype.setNodeaddress = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 LockedBalance = 7;
 * @return {number}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getLockedbalance = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.model.NodeRegistrationTransactionBody.prototype.setLockedbalance = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 7, value);
};


/**
 * optional ProofOfOwnership Poown = 8;
 * @return {?proto.model.ProofOfOwnership}
 */
proto.model.NodeRegistrationTransactionBody.prototype.getPoown = function() {
  return /** @type{?proto.model.ProofOfOwnership} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.ProofOfOwnership, 8));
};


/** @param {?proto.model.ProofOfOwnership|undefined} value */
proto.model.NodeRegistrationTransactionBody.prototype.setPoown = function(value) {
  googleProtobuf.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.NodeRegistrationTransactionBody.prototype.clearPoown = function() {
  this.setPoown(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NodeRegistrationTransactionBody.prototype.hasPoown = function() {
  return googleProtobuf.Message.getField(this, 8) != null;
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.ProofOfOwnership.prototype.toObject = function(opt_includeInstance) {
  return proto.model.ProofOfOwnership.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.ProofOfOwnership} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ProofOfOwnership.toObject = function(includeInstance, msg) {
  var obj = {
    accounttype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    accountaddress: googleProtobuf.Message.getFieldWithDefault(msg, 2, ""),
    blockhash: msg.getBlockhash_asB64(),
    blockheight: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    signature: msg.getSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.ProofOfOwnership}
 */
proto.model.ProofOfOwnership.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.ProofOfOwnership;
  return proto.model.ProofOfOwnership.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.ProofOfOwnership} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.ProofOfOwnership}
 */
proto.model.ProofOfOwnership.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccounttype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountaddress(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockhash(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockheight(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.ProofOfOwnership.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.ProofOfOwnership.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.ProofOfOwnership} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.ProofOfOwnership.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccounttype();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountaddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBlockhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = message.getBlockheight();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional uint32 AccountType = 1;
 * @return {number}
 */
proto.model.ProofOfOwnership.prototype.getAccounttype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.ProofOfOwnership.prototype.setAccounttype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string AccountAddress = 2;
 * @return {string}
 */
proto.model.ProofOfOwnership.prototype.getAccountaddress = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.model.ProofOfOwnership.prototype.setAccountaddress = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bytes blockHash = 3;
 * @return {!(string|Uint8Array)}
 */
proto.model.ProofOfOwnership.prototype.getBlockhash = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes blockHash = 3;
 * This is a type-conversion wrapper around `getBlockhash()`
 * @return {string}
 */
proto.model.ProofOfOwnership.prototype.getBlockhash_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBlockhash()));
};


/**
 * optional bytes blockHash = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockhash()`
 * @return {!Uint8Array}
 */
proto.model.ProofOfOwnership.prototype.getBlockhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBlockhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.ProofOfOwnership.prototype.setBlockhash = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 3, value);
};


/**
 * optional uint32 blockHeight = 4;
 * @return {number}
 */
proto.model.ProofOfOwnership.prototype.getBlockheight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.ProofOfOwnership.prototype.setBlockheight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes signature = 5;
 * @return {!(string|Uint8Array)}
 */
proto.model.ProofOfOwnership.prototype.getSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes signature = 5;
 * This is a type-conversion wrapper around `getSignature()`
 * @return {string}
 */
proto.model.ProofOfOwnership.prototype.getSignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getSignature()));
};


/**
 * optional bytes signature = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSignature()`
 * @return {!Uint8Array}
 */
proto.model.ProofOfOwnership.prototype.getSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getSignature()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.ProofOfOwnership.prototype.setSignature = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 5, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionRequest.toObject = function(includeInstance, msg) {
  var obj = {
    id: googleProtobuf.Message.getFieldWithDefault(msg, 1, "0")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetTransactionRequest}
 */
proto.model.GetTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetTransactionRequest;
  return proto.model.GetTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetTransactionRequest}
 */
proto.model.GetTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetTransactionRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {string}
 */
proto.model.GetTransactionRequest.prototype.getId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.model.GetTransactionRequest.prototype.setId = function(value) {
  googleProtobuf.Message.setProto3StringIntField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetTransactionsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetTransactionsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetTransactionsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionsRequest.toObject = function(includeInstance, msg) {
  var obj = {
    limit: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    offset: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetTransactionsRequest}
 */
proto.model.GetTransactionsRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetTransactionsRequest;
  return proto.model.GetTransactionsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetTransactionsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetTransactionsRequest}
 */
proto.model.GetTransactionsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetTransactionsRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetTransactionsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetTransactionsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 Limit = 1;
 * @return {number}
 */
proto.model.GetTransactionsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetTransactionsRequest.prototype.setLimit = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 Offset = 2;
 * @return {number}
 */
proto.model.GetTransactionsRequest.prototype.getOffset = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetTransactionsRequest.prototype.setOffset = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PostTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PostTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PostTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostTransactionRequest.toObject = function(includeInstance, msg) {
  var obj = {
    transactionbytes: msg.getTransactionbytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PostTransactionRequest}
 */
proto.model.PostTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.PostTransactionRequest;
  return proto.model.PostTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PostTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PostTransactionRequest}
 */
proto.model.PostTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PostTransactionRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.PostTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PostTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionbytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes TransactionBytes = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.PostTransactionRequest.prototype.getTransactionbytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes TransactionBytes = 1;
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {string}
 */
proto.model.PostTransactionRequest.prototype.getTransactionbytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getTransactionbytes()));
};


/**
 * optional bytes TransactionBytes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {!Uint8Array}
 */
proto.model.PostTransactionRequest.prototype.getTransactionbytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getTransactionbytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.PostTransactionRequest.prototype.setTransactionbytes = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PostTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PostTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PostTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.model.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PostTransactionResponse}
 */
proto.model.PostTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.PostTransactionResponse;
  return proto.model.PostTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PostTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PostTransactionResponse}
 */
proto.model.PostTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.Transaction;
      reader.readMessage(value,proto.model.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PostTransactionResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.PostTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PostTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional Transaction Transaction = 1;
 * @return {?proto.model.Transaction}
 */
proto.model.PostTransactionResponse.prototype.getTransaction = function() {
  return /** @type{?proto.model.Transaction} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.Transaction, 1));
};


/** @param {?proto.model.Transaction|undefined} value */
proto.model.PostTransactionResponse.prototype.setTransaction = function(value) {
  googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.PostTransactionResponse.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.PostTransactionResponse.prototype.hasTransaction = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetTransactionsResponse.repeatedFields_ = [3];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetTransactionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetTransactionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetTransactionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionsResponse.toObject = function(includeInstance, msg) {
  var obj = {
    total: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    count: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    transactionsList: googleProtobuf.Message.toObjectList(msg.getTransactionsList(),
    proto.model.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetTransactionsResponse}
 */
proto.model.GetTransactionsResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetTransactionsResponse;
  return proto.model.GetTransactionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetTransactionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetTransactionsResponse}
 */
proto.model.GetTransactionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 3:
      var value = new proto.model.Transaction;
      reader.readMessage(value,proto.model.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetTransactionsResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetTransactionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetTransactionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetTransactionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.model.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 Total = 1;
 * @return {number}
 */
proto.model.GetTransactionsResponse.prototype.getTotal = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetTransactionsResponse.prototype.setTotal = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Count = 2;
 * @return {number}
 */
proto.model.GetTransactionsResponse.prototype.getCount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetTransactionsResponse.prototype.setCount = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Transaction Transactions = 3;
 * @return {!Array<!proto.model.Transaction>}
 */
proto.model.GetTransactionsResponse.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.model.Transaction>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.model.Transaction, 3));
};


/** @param {!Array<!proto.model.Transaction>} value */
proto.model.GetTransactionsResponse.prototype.setTransactionsList = function(value) {
  googleProtobuf.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.model.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.Transaction}
 */
proto.model.GetTransactionsResponse.prototype.addTransactions = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.model.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetTransactionsResponse.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.SendTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.SendTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.SendTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SendTransactionRequest.toObject = function(includeInstance, msg) {
  var obj = {
    transactionbytes: msg.getTransactionbytes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.SendTransactionRequest}
 */
proto.model.SendTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.SendTransactionRequest;
  return proto.model.SendTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.SendTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.SendTransactionRequest}
 */
proto.model.SendTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTransactionbytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.SendTransactionRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.SendTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.SendTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.SendTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionbytes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes TransactionBytes = 1;
 * @return {!(string|Uint8Array)}
 */
proto.model.SendTransactionRequest.prototype.getTransactionbytes = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes TransactionBytes = 1;
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {string}
 */
proto.model.SendTransactionRequest.prototype.getTransactionbytes_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getTransactionbytes()));
};


/**
 * optional bytes TransactionBytes = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTransactionbytes()`
 * @return {!Uint8Array}
 */
proto.model.SendTransactionRequest.prototype.getTransactionbytes_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getTransactionbytes()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.SendTransactionRequest.prototype.setTransactionbytes = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 1, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PostUnconfirmedTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PostUnconfirmedTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostUnconfirmedTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transaction: (f = msg.getTransaction()) && proto.model.Transaction.toObject(includeInstance, f),
    arrivaltimestamp: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    feeperbyte: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PostUnconfirmedTransactionRequest}
 */
proto.model.PostUnconfirmedTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.PostUnconfirmedTransactionRequest;
  return proto.model.PostUnconfirmedTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PostUnconfirmedTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PostUnconfirmedTransactionRequest}
 */
proto.model.PostUnconfirmedTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.Transaction;
      reader.readMessage(value,proto.model.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setArrivaltimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFeeperbyte(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.PostUnconfirmedTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PostUnconfirmedTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PostUnconfirmedTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getArrivaltimestamp();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFeeperbyte();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional Transaction Transaction = 1;
 * @return {?proto.model.Transaction}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.getTransaction = function() {
  return /** @type{?proto.model.Transaction} */ (
    googleProtobuf.Message.getWrapperField(this, proto.model.Transaction, 1));
};


/** @param {?proto.model.Transaction|undefined} value */
proto.model.PostUnconfirmedTransactionRequest.prototype.setTransaction = function(value) {
  googleProtobuf.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.clearTransaction = function() {
  this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.hasTransaction = function() {
  return googleProtobuf.Message.getField(this, 1) != null;
};


/**
 * optional uint32 ArrivalTimestamp = 2;
 * @return {number}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.getArrivaltimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.PostUnconfirmedTransactionRequest.prototype.setArrivaltimestamp = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 FeePerByte = 3;
 * @return {number}
 */
proto.model.PostUnconfirmedTransactionRequest.prototype.getFeeperbyte = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.PostUnconfirmedTransactionRequest.prototype.setFeeperbyte = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};


goog.object.extend(exports, proto.model);
});

var block_pb = createCommonjsModule(function (module, exports) {
// source: model/block.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, transaction_pb);
goog.exportSymbol('proto.model.Block', null, global);
goog.exportSymbol('proto.model.GetBlockRequest', null, global);
goog.exportSymbol('proto.model.GetBlocksRequest', null, global);
goog.exportSymbol('proto.model.GetBlocksResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Block = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.model.Block.repeatedFields_, null);
};
goog.inherits(proto.model.Block, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Block.displayName = 'proto.model.Block';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetBlockRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetBlockRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetBlockRequest.displayName = 'proto.model.GetBlockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetBlocksRequest = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.GetBlocksRequest, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetBlocksRequest.displayName = 'proto.model.GetBlocksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.GetBlocksResponse = function(opt_data) {
  googleProtobuf.Message.initialize(this, opt_data, 0, -1, proto.model.GetBlocksResponse.repeatedFields_, null);
};
goog.inherits(proto.model.GetBlocksResponse, googleProtobuf.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.GetBlocksResponse.displayName = 'proto.model.GetBlocksResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.Block.repeatedFields_ = [16];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Block.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Block.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Block} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Block.toObject = function(includeInstance, msg) {
  var obj = {
    id: googleProtobuf.Message.getFieldWithDefault(msg, 1, "0"),
    previousblockhash: msg.getPreviousblockhash_asB64(),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    timestamp: googleProtobuf.Message.getFieldWithDefault(msg, 4, 0),
    blockseed: msg.getBlockseed_asB64(),
    blocksignature: msg.getBlocksignature_asB64(),
    cumulativedifficulty: googleProtobuf.Message.getFieldWithDefault(msg, 7, ""),
    smithscale: googleProtobuf.Message.getFieldWithDefault(msg, 8, 0),
    blocksmithid: msg.getBlocksmithid_asB64(),
    totalamount: googleProtobuf.Message.getFieldWithDefault(msg, 10, 0),
    totalfee: googleProtobuf.Message.getFieldWithDefault(msg, 11, 0),
    totalcoinbase: googleProtobuf.Message.getFieldWithDefault(msg, 12, 0),
    version: googleProtobuf.Message.getFieldWithDefault(msg, 13, 0),
    payloadlength: googleProtobuf.Message.getFieldWithDefault(msg, 14, 0),
    payloadhash: msg.getPayloadhash_asB64(),
    transactionsList: googleProtobuf.Message.toObjectList(msg.getTransactionsList(),
    transaction_pb.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Block}
 */
proto.model.Block.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.Block;
  return proto.model.Block.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Block} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Block}
 */
proto.model.Block.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreviousblockhash(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockseed(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlocksignature(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setCumulativedifficulty(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSmithscale(value);
      break;
    case 9:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlocksmithid(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalamount(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalfee(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalcoinbase(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPayloadlength(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPayloadhash(value);
      break;
    case 16:
      var value = new transaction_pb.Transaction;
      reader.readMessage(value,transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.addTransactions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.Block.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Block} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Block.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      1,
      f
    );
  }
  f = message.getPreviousblockhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getBlockseed_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = message.getBlocksignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getCumulativedifficulty();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getSmithscale();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getBlocksmithid_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      9,
      f
    );
  }
  f = message.getTotalamount();
  if (f !== 0) {
    writer.writeInt64(
      10,
      f
    );
  }
  f = message.getTotalfee();
  if (f !== 0) {
    writer.writeInt64(
      11,
      f
    );
  }
  f = message.getTotalcoinbase();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getPayloadlength();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getPayloadhash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getTransactionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional int64 ID = 1;
 * @return {string}
 */
proto.model.Block.prototype.getId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, "0"));
};


/** @param {string} value */
proto.model.Block.prototype.setId = function(value) {
  googleProtobuf.Message.setProto3StringIntField(this, 1, value);
};


/**
 * optional bytes PreviousBlockHash = 2;
 * @return {!(string|Uint8Array)}
 */
proto.model.Block.prototype.getPreviousblockhash = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes PreviousBlockHash = 2;
 * This is a type-conversion wrapper around `getPreviousblockhash()`
 * @return {string}
 */
proto.model.Block.prototype.getPreviousblockhash_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getPreviousblockhash()));
};


/**
 * optional bytes PreviousBlockHash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreviousblockhash()`
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.getPreviousblockhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getPreviousblockhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Block.prototype.setPreviousblockhash = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional uint32 Height = 3;
 * @return {number}
 */
proto.model.Block.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setHeight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int64 Timestamp = 4;
 * @return {number}
 */
proto.model.Block.prototype.getTimestamp = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setTimestamp = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bytes BlockSeed = 5;
 * @return {!(string|Uint8Array)}
 */
proto.model.Block.prototype.getBlockseed = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes BlockSeed = 5;
 * This is a type-conversion wrapper around `getBlockseed()`
 * @return {string}
 */
proto.model.Block.prototype.getBlockseed_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBlockseed()));
};


/**
 * optional bytes BlockSeed = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockseed()`
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.getBlockseed_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBlockseed()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Block.prototype.setBlockseed = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 5, value);
};


/**
 * optional bytes BlockSignature = 6;
 * @return {!(string|Uint8Array)}
 */
proto.model.Block.prototype.getBlocksignature = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes BlockSignature = 6;
 * This is a type-conversion wrapper around `getBlocksignature()`
 * @return {string}
 */
proto.model.Block.prototype.getBlocksignature_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBlocksignature()));
};


/**
 * optional bytes BlockSignature = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlocksignature()`
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.getBlocksignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBlocksignature()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Block.prototype.setBlocksignature = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string CumulativeDifficulty = 7;
 * @return {string}
 */
proto.model.Block.prototype.getCumulativedifficulty = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.model.Block.prototype.setCumulativedifficulty = function(value) {
  googleProtobuf.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int64 SmithScale = 8;
 * @return {number}
 */
proto.model.Block.prototype.getSmithscale = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setSmithscale = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bytes BlocksmithID = 9;
 * @return {!(string|Uint8Array)}
 */
proto.model.Block.prototype.getBlocksmithid = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * optional bytes BlocksmithID = 9;
 * This is a type-conversion wrapper around `getBlocksmithid()`
 * @return {string}
 */
proto.model.Block.prototype.getBlocksmithid_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getBlocksmithid()));
};


/**
 * optional bytes BlocksmithID = 9;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlocksmithid()`
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.getBlocksmithid_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getBlocksmithid()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Block.prototype.setBlocksmithid = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 9, value);
};


/**
 * optional int64 TotalAmount = 10;
 * @return {number}
 */
proto.model.Block.prototype.getTotalamount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setTotalamount = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 10, value);
};


/**
 * optional int64 TotalFee = 11;
 * @return {number}
 */
proto.model.Block.prototype.getTotalfee = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setTotalfee = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 TotalCoinBase = 12;
 * @return {number}
 */
proto.model.Block.prototype.getTotalcoinbase = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setTotalcoinbase = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 12, value);
};


/**
 * optional uint32 Version = 13;
 * @return {number}
 */
proto.model.Block.prototype.getVersion = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setVersion = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint32 PayloadLength = 14;
 * @return {number}
 */
proto.model.Block.prototype.getPayloadlength = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.model.Block.prototype.setPayloadlength = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 14, value);
};


/**
 * optional bytes PayloadHash = 15;
 * @return {!(string|Uint8Array)}
 */
proto.model.Block.prototype.getPayloadhash = function() {
  return /** @type {!(string|Uint8Array)} */ (googleProtobuf.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes PayloadHash = 15;
 * This is a type-conversion wrapper around `getPayloadhash()`
 * @return {string}
 */
proto.model.Block.prototype.getPayloadhash_asB64 = function() {
  return /** @type {string} */ (googleProtobuf.Message.bytesAsB64(
      this.getPayloadhash()));
};


/**
 * optional bytes PayloadHash = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPayloadhash()`
 * @return {!Uint8Array}
 */
proto.model.Block.prototype.getPayloadhash_asU8 = function() {
  return /** @type {!Uint8Array} */ (googleProtobuf.Message.bytesAsU8(
      this.getPayloadhash()));
};


/** @param {!(string|Uint8Array)} value */
proto.model.Block.prototype.setPayloadhash = function(value) {
  googleProtobuf.Message.setProto3BytesField(this, 15, value);
};


/**
 * repeated Transaction Transactions = 16;
 * @return {!Array<!proto.model.Transaction>}
 */
proto.model.Block.prototype.getTransactionsList = function() {
  return /** @type{!Array<!proto.model.Transaction>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, transaction_pb.Transaction, 16));
};


/** @param {!Array<!proto.model.Transaction>} value */
proto.model.Block.prototype.setTransactionsList = function(value) {
  googleProtobuf.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.model.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.Transaction}
 */
proto.model.Block.prototype.addTransactions = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.model.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.Block.prototype.clearTransactionsList = function() {
  this.setTransactionsList([]);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlockRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chaintype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    id: googleProtobuf.Message.getFieldWithDefault(msg, 2, "0"),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetBlockRequest}
 */
proto.model.GetBlockRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetBlockRequest;
  return proto.model.GetBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetBlockRequest}
 */
proto.model.GetBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChaintype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readInt64String());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetBlockRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaintype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getId();
  if (parseInt(f, 10) !== 0) {
    writer.writeInt64String(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional int32 ChainType = 1;
 * @return {number}
 */
proto.model.GetBlockRequest.prototype.getChaintype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetBlockRequest.prototype.setChaintype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 ID = 2;
 * @return {string}
 */
proto.model.GetBlockRequest.prototype.getId = function() {
  return /** @type {string} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, "0"));
};


/** @param {string} value */
proto.model.GetBlockRequest.prototype.setId = function(value) {
  googleProtobuf.Message.setProto3StringIntField(this, 2, value);
};


/**
 * optional uint32 Height = 3;
 * @return {number}
 */
proto.model.GetBlockRequest.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.GetBlockRequest.prototype.setHeight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};





if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetBlocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetBlocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetBlocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlocksRequest.toObject = function(includeInstance, msg) {
  var obj = {
    chaintype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    limit: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetBlocksRequest}
 */
proto.model.GetBlocksRequest.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetBlocksRequest;
  return proto.model.GetBlocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetBlocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetBlocksRequest}
 */
proto.model.GetBlocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChaintype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetBlocksRequest.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetBlocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetBlocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaintype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional int32 ChainType = 1;
 * @return {number}
 */
proto.model.GetBlocksRequest.prototype.getChaintype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetBlocksRequest.prototype.setChaintype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Limit = 2;
 * @return {number}
 */
proto.model.GetBlocksRequest.prototype.getLimit = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetBlocksRequest.prototype.setLimit = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 Height = 3;
 * @return {number}
 */
proto.model.GetBlocksRequest.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.GetBlocksRequest.prototype.setHeight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.GetBlocksResponse.repeatedFields_ = [4];



if (googleProtobuf.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.GetBlocksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.model.GetBlocksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.GetBlocksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlocksResponse.toObject = function(includeInstance, msg) {
  var obj = {
    chaintype: googleProtobuf.Message.getFieldWithDefault(msg, 1, 0),
    count: googleProtobuf.Message.getFieldWithDefault(msg, 2, 0),
    height: googleProtobuf.Message.getFieldWithDefault(msg, 3, 0),
    blocksList: googleProtobuf.Message.toObjectList(msg.getBlocksList(),
    proto.model.Block.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.GetBlocksResponse}
 */
proto.model.GetBlocksResponse.deserializeBinary = function(bytes) {
  var reader = new googleProtobuf.BinaryReader(bytes);
  var msg = new proto.model.GetBlocksResponse;
  return proto.model.GetBlocksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.GetBlocksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.GetBlocksResponse}
 */
proto.model.GetBlocksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChaintype(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeight(value);
      break;
    case 4:
      var value = new proto.model.Block;
      reader.readMessage(value,proto.model.Block.deserializeBinaryFromReader);
      msg.addBlocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.GetBlocksResponse.prototype.serializeBinary = function() {
  var writer = new googleProtobuf.BinaryWriter();
  proto.model.GetBlocksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.GetBlocksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.GetBlocksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChaintype();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getBlocksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.model.Block.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 ChainType = 1;
 * @return {number}
 */
proto.model.GetBlocksResponse.prototype.getChaintype = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.model.GetBlocksResponse.prototype.setChaintype = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 Count = 2;
 * @return {number}
 */
proto.model.GetBlocksResponse.prototype.getCount = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.model.GetBlocksResponse.prototype.setCount = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 Height = 3;
 * @return {number}
 */
proto.model.GetBlocksResponse.prototype.getHeight = function() {
  return /** @type {number} */ (googleProtobuf.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.model.GetBlocksResponse.prototype.setHeight = function(value) {
  googleProtobuf.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Block blocks = 4;
 * @return {!Array<!proto.model.Block>}
 */
proto.model.GetBlocksResponse.prototype.getBlocksList = function() {
  return /** @type{!Array<!proto.model.Block>} */ (
    googleProtobuf.Message.getRepeatedWrapperField(this, proto.model.Block, 4));
};


/** @param {!Array<!proto.model.Block>} value */
proto.model.GetBlocksResponse.prototype.setBlocksList = function(value) {
  googleProtobuf.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.model.Block=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.Block}
 */
proto.model.GetBlocksResponse.prototype.addBlocks = function(opt_value, opt_index) {
  return googleProtobuf.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.model.Block, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.model.GetBlocksResponse.prototype.clearBlocksList = function() {
  this.setBlocksList([]);
};


goog.object.extend(exports, proto.model);
});

// source: service/block.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog = googleProtobuf;
var global = Function('return this')();


goog.object.extend(proto, block_pb);

// package: service
// file: service/block.proto



var grpc = grpcWeb.grpc;

var BlockService = (function () {
  function BlockService() {}
  BlockService.serviceName = "service.BlockService";
  return BlockService;
}());

BlockService.GetBlocks = {
  methodName: "GetBlocks",
  service: BlockService,
  requestStream: false,
  responseStream: false,
  requestType: block_pb.GetBlocksRequest,
  responseType: block_pb.GetBlocksResponse
};

BlockService.GetBlock = {
  methodName: "GetBlock",
  service: BlockService,
  requestStream: false,
  responseStream: false,
  requestType: block_pb.GetBlockRequest,
  responseType: block_pb.Block
};

var BlockService_1 = BlockService;

function BlockServiceClient(serviceHost, options) {
  this.serviceHost = serviceHost;
  this.options = options || {};
}

BlockServiceClient.prototype.getBlocks = function getBlocks(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc.unary(BlockService.GetBlocks, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

BlockServiceClient.prototype.getBlock = function getBlock(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc.unary(BlockService.GetBlock, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

var BlockServiceClient_1 = BlockServiceClient;

var block_pb_service = {
	BlockService: BlockService_1,
	BlockServiceClient: BlockServiceClient_1
};

// source: service/transaction.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


var goog$1 = googleProtobuf;
var global$1 = Function('return this')();


goog$1.object.extend(proto, transaction_pb);

// package: service
// file: service/transaction.proto



var grpc$1 = grpcWeb.grpc;

var TransactionService = (function () {
  function TransactionService() {}
  TransactionService.serviceName = "service.TransactionService";
  return TransactionService;
}());

TransactionService.GetTransactions = {
  methodName: "GetTransactions",
  service: TransactionService,
  requestStream: false,
  responseStream: false,
  requestType: transaction_pb.GetTransactionsRequest,
  responseType: transaction_pb.GetTransactionsResponse
};

TransactionService.GetTransaction = {
  methodName: "GetTransaction",
  service: TransactionService,
  requestStream: false,
  responseStream: false,
  requestType: transaction_pb.GetTransactionRequest,
  responseType: transaction_pb.Transaction
};

TransactionService.PostTransaction = {
  methodName: "PostTransaction",
  service: TransactionService,
  requestStream: false,
  responseStream: false,
  requestType: transaction_pb.PostTransactionRequest,
  responseType: transaction_pb.PostTransactionResponse
};

var TransactionService_1 = TransactionService;

function TransactionServiceClient(serviceHost, options) {
  this.serviceHost = serviceHost;
  this.options = options || {};
}

TransactionServiceClient.prototype.getTransactions = function getTransactions(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc$1.unary(TransactionService.GetTransactions, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc$1.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

TransactionServiceClient.prototype.getTransaction = function getTransaction(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc$1.unary(TransactionService.GetTransaction, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc$1.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

TransactionServiceClient.prototype.postTransaction = function postTransaction(requestMessage, metadata, callback) {
  if (arguments.length === 2) {
    callback = arguments[1];
  }
  var client = grpc$1.unary(TransactionService.PostTransaction, {
    request: requestMessage,
    host: this.serviceHost,
    metadata: metadata,
    transport: this.options.transport,
    debug: this.options.debug,
    onEnd: function (response) {
      if (callback) {
        if (response.status !== grpc$1.Code.OK) {
          var err = new Error(response.statusMessage);
          err.code = response.status;
          err.metadata = response.trailers;
          callback(err, null);
        } else {
          callback(null, response.message);
        }
      }
    }
  });
  return {
    cancel: function () {
      callback = null;
      client.close();
    }
  };
};

var TransactionServiceClient_1 = TransactionServiceClient;

var transaction_pb_service = {
	TransactionService: TransactionService_1,
	TransactionServiceClient: TransactionServiceClient_1
};

var src = createCommonjsModule(function (module, exports) {
Object.defineProperty(exports, "__esModule", { value: true });





let awaitingExecution = null;
function runCallbacks() {
    if (awaitingExecution) {
        const thisCallbackSet = awaitingExecution;
        awaitingExecution = null;
        for (let i = 0; i < thisCallbackSet.length; i++) {
            try {
                thisCallbackSet[i]();
            }
            catch (e) {
                if (awaitingExecution === null) {
                    awaitingExecution = [];
                    setTimeout(() => {
                        runCallbacks();
                    }, 0);
                }
                for (let k = thisCallbackSet.length - 1; k > i; k--) {
                    awaitingExecution.unshift(thisCallbackSet[k]);
                }
                throw e;
            }
        }
    }
}
function detach(cb) {
    if (awaitingExecution !== null) {
        awaitingExecution.push(cb);
        return;
    }
    awaitingExecution = [cb];
    setTimeout(() => {
        runCallbacks();
    }, 0);
}
class XHR {
    constructor(transportOptions) {
        this.xhr = null;
        this.metadata = null;
        this.options = transportOptions;
    }
    onLoadEvent() {
        const result = new Uint8Array(this.xhr.response);
        detach(() => {
            this.options.onChunk(result);
        });
        detach(() => {
            this.options.onEnd();
        });
    }
    onStateChange() {
        if (this.xhr.readyState === XMLHttpRequest.HEADERS_RECEIVED) {
            detach(() => {
                this.options.onHeaders(new grpcWeb.grpc.Metadata(this.xhr.getAllResponseHeaders()), this.xhr.status);
            });
        }
    }
    sendMessage(msgBytes) {
        this.xhr.send(msgBytes);
    }
    finishSend() { }
    start(metadata) {
        this.metadata = metadata;
        const xhr = new XMLHttpRequest();
        this.xhr = xhr;
        xhr.open('POST', this.options.url);
        xhr.responseType = 'arraybuffer';
        this.metadata.forEach((key, values) => {
            xhr.setRequestHeader(key, values.join(', '));
        });
        xhr.addEventListener('readystatechange', this.onStateChange.bind(this));
        xhr.addEventListener('loadend', this.onLoadEvent.bind(this));
        xhr.addEventListener('error', (err) => {
            detach(() => {
                this.options.onEnd(err.error);
            });
        });
    }
    cancel() {
        this.xhr.abort();
    }
}
function xhrTransport() {
    return (opts) => {
        return new XHR(opts);
    };
}
class ZooBC {
    constructor() {
        this._host = '';
    }
    get connection() {
        return this._host;
    }
    set connection(host) {
        this._host = host;
    }
    httpTransport(nodeHttpTransport) {
        grpcWeb.grpc.setDefaultTransport(nodeHttpTransport);
    }
    getBlocks(ChainType, Limit, Height, callback) {
        const request = new block_pb.GetBlocksRequest();
        request.setChaintype(ChainType);
        request.setHeight(Height);
        request.setLimit(Limit);
        grpcWeb.grpc.unary(block_pb_service.BlockService.GetBlocks, {
            request: request,
            host: this._host,
            onEnd: (res) => {
                const { status, statusMessage, message } = res;
                if (status === grpcWeb.grpc.Code.OK && message) {
                    callback(null, message.toObject());
                }
                else {
                    callback(`Error Blocks: ${statusMessage}`, null);
                }
            },
        });
    }
    getBlock(ChainType, ID = '0', Height = 0, callback) {
        const request = new block_pb.GetBlockRequest();
        request.setChaintype(ChainType);
        request.setId(ID);
        request.setHeight(Height);
        grpcWeb.grpc.unary(block_pb_service.BlockService.GetBlock, {
            request: request,
            host: this._host,
            onEnd: (res) => {
                const { status, statusMessage, message } = res;
                if (status === grpcWeb.grpc.Code.OK && message) {
                    callback(null, message.toObject());
                }
                else {
                    callback(`Error Block: ${statusMessage}`, null);
                }
            },
        });
    }
    getTransactions(Limit, Offset, callback) {
        const request = new transaction_pb.GetTransactionsRequest();
        request.setLimit(Limit);
        request.setOffset(Offset);
        grpcWeb.grpc.unary(transaction_pb_service.TransactionService.GetTransactions, {
            request: request,
            host: this._host,
            onEnd: (res) => {
                const { status, statusMessage, message } = res;
                if (status === grpcWeb.grpc.Code.OK && message) {
                    callback(null, message.toObject());
                }
                else {
                    callback(`Error Transactions: ${statusMessage}`, null);
                }
            },
        });
    }
    getTransaction(ID = '0', callback) {
        const request = new transaction_pb.GetTransactionRequest();
        request.setId(ID);
        grpcWeb.grpc.unary(transaction_pb_service.TransactionService.GetTransaction, {
            request: request,
            host: this._host,
            onEnd: (res) => {
                const { status, statusMessage, message } = res;
                if (status === grpcWeb.grpc.Code.OK && message) {
                    callback(null, message.toObject());
                }
                else {
                    callback(`Error Transaction: ${statusMessage}`, null);
                }
            },
        });
    }
}
const zoobc = new ZooBC();
function connection(host) {
    zoobc.connection = host;
}
function httpTransport(nodeHttpTransport) {
    zoobc.httpTransport(nodeHttpTransport);
}
function getBlocks(ChainType, Limit, Height) {
    return new Promise((resolve, reject) => {
        zoobc.getBlocks(ChainType, Limit, Height, (err, resp) => {
            if (err)
                return reject(err);
            return resolve(resp);
        });
    });
}
function getBlock(ChainType, ID = '0', Height = 0) {
    return new Promise((resolve, reject) => {
        zoobc.getBlock(ChainType, ID, Height, (err, resp) => {
            if (err)
                return reject(err);
            return resolve(resp);
        });
    });
}
function getTransactions(Limit, Offset = 0) {
    return new Promise((resolve, reject) => {
        zoobc.getTransactions(Limit, Offset, (err, resp) => {
            if (err)
                return reject(err);
            return resolve(resp);
        });
    });
}
function getTransaction(ID = '0') {
    return new Promise((resolve, reject) => {
        zoobc.getTransaction(ID, (err, resp) => {
            if (err)
                return reject(err);
            return resolve(resp);
        });
    });
}
exports.default = {
    connection,
    httpTransport,
    getBlocks,
    getBlock,
    getTransactions,
    getTransaction,
    xhrTransport,
};

});

var index = unwrapExports(src);

export default index;
